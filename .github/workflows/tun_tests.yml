name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: all_tests
        type: choice
        options:
          - test_authorization
          - test_settings
          - test_vocabulary
          - all_tests

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - run: |
          ARTIFACT_ID=$(curl -s -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/denisproper/elang_tests/actions/artifacts?name=allure-results" \
            | python -c "import sys, json; data = json.load(sys.stdin); print(data['artifacts'][0]['id']) if data['artifacts'] else exit(1)")
          
          curl -L -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -o artifacts.zip \
            "https://api.github.com/repos/denisproper/elang_tests/actions/artifacts/$ARTIFACT_ID/zip"

          REPORT_ID=$(curl -s -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/denisproper/elang_tests/actions/artifacts?name=github-pages" \
            | python -c "import sys, json; data = json.load(sys.stdin); print(data['artifacts'][0]['id']) if data['artifacts'] else exit(1)")

          curl -L -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -o pages.zip \
            "https://api.github.com/repos/denisproper/elang_tests/actions/artifacts/$REPORT_ID/zip"

      - run: mkdir -p allure-results && unzip artifacts.zip -d allure-results
      - run: mkdir -p old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp -r pages_history/history/* allure-results

      - name: Upload allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-history-${{ github.run_id }}
          path: allure-results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: download-history
    env:
      VALID_EMAIL: ${{ secrets.VALID_EMAIL }}
      VALID_PASSWORD: ${{ secrets.VALID_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Chrome
        run: sudo apt-get install -y google-chrome-stable

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: allure-history-*

      - name: Run tests
        run: |
          case "${{ github.event.inputs.deployment_target }}" in
            "test_authorization") pytest tests/test_authorization/* --alluredir=allure-results ;;
            "test_settings") pytest tests/test_settings/test_settings.py --alluredir=allure-results ;;
            "test_vocabulary") pytest tests/test_settings/test_vocabulary.py --alluredir=allure-results ;;
            "all_tests") pytest tests/* --alluredir=allure-results ;;
          esac
        continue-on-error: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ github.run_id }}
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      - run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.24.0/allure-2.24.0.tgz
          sudo tar -zxvf allure-2.24.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.24.0/bin/allure /usr/bin/allure

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: allure-*

      - run: allure generate allure-results -o _site --clean

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - name: Download report
        uses: actions/download-artifact@v4
        with:
          name: allure-report

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
