name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: all_tests
        type: choice
        options:
          - test_authorization
          - test_settings
          - test_vocabulary
          - all_tests

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Download previous artifacts
        run: |
          ARTIFACT_ID=$(curl -L -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?name=results" \
            | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") \
          && curl -L -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip -o artifacts.zip

          mkdir results && unzip artifacts.zip -d results

      - name: Store results
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: download-history

    env:
      VALID_EMAIL: ${{ secrets.VALID_EMAIL }}
      VALID_PASSWORD: ${{ secrets.VALID_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t tests-image .

      - name: Run tests in Docker
        run: |
          docker run --rm \
            -e VALID_EMAIL=${{ secrets.VALID_EMAIL }} \
            -e VALID_PASSWORD=${{ secrets.VALID_PASSWORD }} \
            -v ${{ github.workspace }}/results:/app/results \
            -e TARGET_TEST=${{ github.event.inputs.deployment_target }} \
            tests-image

      - name: Store results
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.run_id }}
          path: results
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          name: results-${{ github.run_id }}

      - name: Upload Pages artifact (optional)
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages (optional)
        id: deployment
        uses: actions/deploy-pages@v4
