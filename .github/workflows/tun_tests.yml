name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: all_tests
        type: choice
        options:
          - test_one
          - test_authorization
          - test_settings
          - test_vocabulary
          - all_tests

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - run: >
          ARTIFACT_ID=$(curl -L -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/denisproper/elang_tests/actions/artifacts?name=results"
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/denisproper/elang_tests/actions/artifacts/$ARTIFACT_ID/zip -o artifacts.zip
          &&
          REPORT_ID=$(curl -L -H "Accept: application/vnd.github+json"
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/denisproper/elang_tests/actions/artifacts?name=github-page"
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          &&
          curl -L
          -H "Accept: application/vnd.github+json"
          -H "Authorization: Bearer ${{ secrets.TOKEN }}"
          -H "X-GitHub-Api-Version: 2022-11-28"
          https://api.github.com/repos/denisproper/elang_tests/actions/artifacts/$REPORT_ID/zip
          -o pages.zip
      - run: mkdir results && unzip artifacts.zip -d results
      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/history/* results && cp -r pages_history/history results
      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: results
          path:
            results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Chrome
        run: sudo apt-get install -y google-chrome-stable

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - name: Run tests for test_one
        if: "github.event.inputs.deployment_target == 'test_one'"
        run: pytest tests/test_settings/test_vocabulary.py::test_title --alluredir=results

      - name: Run tests for test_authorization
        if: "github.event.inputs.deployment_target == 'test_authorization'"
        run: pytest tests/test_authorization/* --alluredir=results

      - name: Run tests for test_settings
        if: "github.event.inputs.deployment_target == 'test_settings'"
        run: pytest tests/test_settings/test_settings.py --alluredir=results

      - name: Run tests for test_vocabulary
        if: "github.event.inputs.deployment_target == 'test_vocabulary'"
        run: pytest tests/test_settings/test_vocabulary.py --alluredir=results

      - name: Run all tests
        if: "github.event.inputs.deployment_target == 'all_tests'"
        run: pytest tests/* --alluredir=results

      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.run_id }}
          path: results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      - run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz
          sudo tar -zxvf allure-2.23.1.tgz -C /opt/
          sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - run: allure generate -c results -o _site

      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4