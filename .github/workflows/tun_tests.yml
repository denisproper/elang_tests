name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: all_tests
        type: choice
        options:
          - test_authorization
          - test_settings
          - test_vocabulary
          - all_tests

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Download previous reports
        run: |
          ARTIFACT_ID=$(curl -L -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/denisproper/elang_tests/actions/artifacts?name=results" \
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") \
          &&
          curl -L -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/denisproper/elang_tests/actions/artifacts/$ARTIFACT_ID/zip" -o artifacts.zip \
          &&
          unzip artifacts.zip -d results

      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: download-history

    env:
      VALID_EMAIL: ${{ secrets.VALID_EMAIL }}
      VALID_PASSWORD: ${{ secrets.VALID_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Chrome
        run: sudo apt-get install -y google-chrome-stable

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest tests/${{ github.event.inputs.deployment_target }} --alluredir=results
        continue-on-error: true

      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.run_id }}
          path: results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Setup Java for Allure
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz
          sudo tar -zxvf allure-2.23.1.tgz -C /opt/
          sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure

      - name: Download test results
        uses: actions/download-artifact@v4

      - name: Clean old report and generate a new one
        run: |
          rm -rf _site  # Удаляем старые файлы
          allure generate -c results -o _site --clean

      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - name: Download generated report
        uses: actions/download-artifact@v4

      - name: Delete old GitHub Pages artifact
        run: rm -rf _site  # Удаляем старый кэш перед загрузкой нового

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
